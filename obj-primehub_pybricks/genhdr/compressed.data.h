#define MP_MAX_UNCOMPRESSED_TEXT_LEN (73)
MP_COMPRESSED_DATA("can'\364objec\364forma\364argumen\364argument\363functio\356no\364'%s\247specifie\362conver\364'%q\247supporte\344allowe\344keywor\344multipl\345mus\364t\357positiona\354lengt\350fo\362isn'\364require\344strin\347%\344assignmen\364o\346ar\347generato\362nam\345typ\345i\356Missin\347b\345comple\370doesn'\364invali\344missin\347unsupporte\344numbe\362\341in\364empt\371expecte\344fiel\344give\356inde\370i\363nonloca\354rang\345sequenc\345valu\345ha\363unknow\356%\363fro\355n\357o\362wit\350zer\357specificatio\356value\363incompatibl\345issubclass(\251afte\362ba\344bu\364foun\344need\363non-keywor\344ou\364take\363to\357tupl\345wron\347allocatio\356conversio\356expressio\356identifie\362incomplet\345unexpecte\344attribut\345automati\343dic\364expectin\347hav\345lis\364numberin\347redefine\344%\361a\356defaul\364failed\254indice\363intege\362outsid\345suppor\364buffe\362divid\345impor\364inden\364manua\354memor\371switc\350synta\370unpac\353*\370byte\363clas\363extr\341floa\364oute\362smal\354'%c\247.mp\371cod\345ite\355lon\347mor\345sel\346sig\356ste\360wer\345%q\272\262go\364ke\371%\343a\363")
MP_MATCH_COMPRESSED("%c needs int or char", "\377\376\303\250\270char")
MP_MATCH_COMPRESSED("%q index out of range", "\377\330\255\305\231\260")
MP_MATCH_COMPRESSED("%q indices must be integers, not %s", "\377\330\334\217\240integers,\206\265")
MP_MATCH_COMPRESSED("%q() takes %d positional arguments but %d were given", "\377%q()\306\227\221\204\301\227\371\254")
MP_MATCH_COMPRESSED("'%q' argument required", "\377\212\203\225")
MP_MATCH_COMPRESSED("'%s' object doesn't support item assignment", "\377\207\201\242\337\363\230")
MP_MATCH_COMPRESSED("'%s' object doesn't support item deletion", "\377\207\201\242\337\363deletion")
MP_MATCH_COMPRESSED("'%s' object has no attribute '%q'", "\377\207\201\263\267\320\212")
MP_MATCH_COMPRESSED("'%s' object isn't an iterator", "\377\207\201\224\331iterator")
MP_MATCH_COMPRESSED("'%s' object isn't callable", "\377\207\201\224callable")
MP_MATCH_COMPRESSED("'%s' object isn't iterable", "\377\207\201\224iterable")
MP_MATCH_COMPRESSED("'%s' object isn't subscriptable", "\377\207\201\224subscriptable")
MP_MATCH_COMPRESSED("'=' alignment not allowed in string format specifier", "\377'=' alignment\206\214\236\226\202\210")
MP_MATCH_COMPRESSED("'break'/'continue' outside loop", "\377'break'/'continue'\336loop")
MP_MATCH_COMPRESSED("'yield' outside function", "\377'yield'\336\205")
MP_MATCH_COMPRESSED("*x must be assignment target", "\377\351\217\240\230target")
MP_MATCH_COMPRESSED("0.0 to a complex power", "\3770.0\220\247\241power")
MP_MATCH_COMPRESSED("3-arg pow() not supported", "\3773-arg pow()\206\213")
MP_MATCH_COMPRESSED("B# is not allowed", "\377B#\256\206\214")
MP_MATCH_COMPRESSED("Cb is not allowed", "\377Cb\256\206\214")
MP_MATCH_COMPRESSED("E# is not allowed", "\377E#\256\206\214")
MP_MATCH_COMPRESSED("Fb is not allowed", "\377Fb\256\206\214")
MP_MATCH_COMPRESSED("LHS of keyword arg must be an id", "\377LHS\231\215\232\217\240\331id")
MP_MATCH_COMPRESSED("Missing /", "\377\237/")
MP_MATCH_COMPRESSED("Missing fractional value 1, 2, 4, 8, etc.", "\377\237fractional\2621, 2, 4, 8, etc.")
MP_MATCH_COMPRESSED("Missing note name A-G or R", "\377\237note\234A-G\270R")
MP_MATCH_COMPRESSED("Missing octave number 2-8", "\377\237octave\2462-8")
MP_MATCH_COMPRESSED("__init__() should return None, not '%s'", "\377__init__() should return None,\206\207")
MP_MATCH_COMPRESSED("abort() called", "abort() called")
MP_MATCH_COMPRESSED("arg is an empty sequence", "\377\232\256\331\251\261")
MP_MATCH_COMPRESSED("argument name reused", "\377\203\234reused")
MP_MATCH_COMPRESSED("argument num/types mismatch", "\377\203num/types mismatch")
MP_MATCH_COMPRESSED("attributes not supported yet", "\377attributes\206\213yet")
MP_MATCH_COMPRESSED("bad data", "\377\300data")
MP_MATCH_COMPRESSED("bad length", "\377\300\222")
MP_MATCH_COMPRESSED("bad name length", "\377\300\234\222")
MP_MATCH_COMPRESSED("bad typecode", "\377\300typecode")
MP_MATCH_COMPRESSED("bits must be 32 or less", "\377bits\217\24032\270less")
MP_MATCH_COMPRESSED("buffer too small", "\377\340\307\357")
MP_MATCH_COMPRESSED("bytes value out of range", "\377\352\262\305\231\260")
MP_MATCH_COMPRESSED("can't assign to expression", "\377\200assign\220\314")
MP_MATCH_COMPRESSED("can't convert %s to %s", "\377\200\211\265\220\265")
MP_MATCH_COMPRESSED("can't convert %s to complex", "\377\200\211\265\220\241")
MP_MATCH_COMPRESSED("can't convert %s to float", "\377\200\211\265\220\355")
MP_MATCH_COMPRESSED("can't convert %s to int", "\377\200\211\265\220\250")
MP_MATCH_COMPRESSED("can't convert '%q' object to %q implicitly", "\377\200\211\212\201\220\330implicitly")
MP_MATCH_COMPRESSED("can't convert NaN to int", "\377\200\211NaN\220\250")
MP_MATCH_COMPRESSED("can't convert inf to int", "\377\200\211inf\220\250")
MP_MATCH_COMPRESSED("can't create '%q' instances", "\377\200create\212instances")
MP_MATCH_COMPRESSED("can't declare nonlocal in outer code", "\377\200declare\257\236\356\362")
MP_MATCH_COMPRESSED("can't delete expression", "\377\200delete\314")
MP_MATCH_COMPRESSED("can't have multiple **x", "\377\200\324\216**x")
MP_MATCH_COMPRESSED("can't have multiple *x", "\377\200\324\216\351")
MP_MATCH_COMPRESSED("can't import name %q", "\377\200\342\234\330")
MP_MATCH_COMPRESSED("can't perform relative import", "\377\200perform relative\342")
MP_MATCH_COMPRESSED("can't send non-None value to a just-started generator", "\377\200send non-None\262\220\247just-started\233")
MP_MATCH_COMPRESSED("can't switch from automatic field numbering to manual field specification", "\377\200\346\266\321\253\326\220\344\253\273")
MP_MATCH_COMPRESSED("can't switch from manual field specification to automatic field numbering", "\377\200\346\266\344\253\273\220\321\253\326")
MP_MATCH_COMPRESSED("can't truncate-divide a complex number", "\377\200truncate-divide\247\241\246")
MP_MATCH_COMPRESSED("chr() arg not in range(256)", "\377chr()\232\206\236range(256)")
MP_MATCH_COMPRESSED("complex divide by zero", "\377\241\341by\272")
MP_MATCH_COMPRESSED("default 'except' must be last", "\377\332'except'\217\240last")
MP_MATCH_COMPRESSED("dict update sequence has wrong length", "\377\322update\261\263\311\222")
MP_MATCH_COMPRESSED("divide by zero", "\377\341by\272")
MP_MATCH_COMPRESSED("empty separator", "\377\251separator")
MP_MATCH_COMPRESSED("end of format while looking for conversion specifier", "\377end\231\202while looking\223\313\210")
MP_MATCH_COMPRESSED("exceptions must derive from BaseException", "\377exceptions\217derive\266BaseException")
MP_MATCH_COMPRESSED("expected ':' after format specifier", "\377\252':'\277\202\210")
MP_MATCH_COMPRESSED("expecting just a value for set", "\377\323just\247\262\223set")
MP_MATCH_COMPRESSED("expecting key:value for dict", "\377\323key:value\223\322")
MP_MATCH_COMPRESSED("extra keyword arguments given", "\377\354\215\204\254")
MP_MATCH_COMPRESSED("extra positional arguments given", "\377\354\221\204\254")
MP_MATCH_COMPRESSED("failed to init I2C", "\377failed\220init I2C")
MP_MATCH_COMPRESSED("float too big", "\377\355\307big")
MP_MATCH_COMPRESSED("format needs a dict", "\377\202\303\247\322")
MP_MATCH_COMPRESSED("format string didn't convert all arguments", "\377\202\226didn't\211all\204")
MP_MATCH_COMPRESSED("format string needs more arguments", "\377\202\226\303\365\204")
MP_MATCH_COMPRESSED("function doesn't take keyword arguments", "\377\205\242take\215\204")
MP_MATCH_COMPRESSED("function expected at most %d arguments, got %d", "\377\205\252at most\227arguments,\374\227")
MP_MATCH_COMPRESSED("function got multiple values for argument '%q'", "\377\205\374\216\274\223\203\212")
MP_MATCH_COMPRESSED("function missing %d required positional arguments", "\377\205\244\227\225\221\204")
MP_MATCH_COMPRESSED("function missing keyword-only argument", "\377\205\244keyword-only\203")
MP_MATCH_COMPRESSED("function missing required keyword argument '%q'", "\377\205\244\225\215\203\212")
MP_MATCH_COMPRESSED("function missing required positional argument #%d", "\377\205\244\225\221\203#%d")
MP_MATCH_COMPRESSED("function takes %d positional arguments but %d were given", "\377\205\306\227\221\204\301\227\371\254")
MP_MATCH_COMPRESSED("generator already executing", "\377\233already executing")
MP_MATCH_COMPRESSED("generator ignored GeneratorExit", "\377\233ignored GeneratorExit")
MP_MATCH_COMPRESSED("generator raised StopIteration", "\377\233raised StopIteration")
MP_MATCH_COMPRESSED("identifier redefined as global", "\377\315\327\377global")
MP_MATCH_COMPRESSED("identifier redefined as nonlocal", "\377\315\327\377\257")
MP_MATCH_COMPRESSED("incompatible .mpy arch", "\377\275\361arch")
MP_MATCH_COMPRESSED("incompatible .mpy file", "\377\275\361file")
MP_MATCH_COMPRESSED("incomplete format", "\377\316\202")
MP_MATCH_COMPRESSED("incomplete format key", "\377\316\202\375")
MP_MATCH_COMPRESSED("incorrect device id", "incorrect device id")
MP_MATCH_COMPRESSED("index out of range", "\377\255\305\231\260")
MP_MATCH_COMPRESSED("int() arg 2 must be >= 2 and <= 36", "\377int()\232\373\217\240>=\373and <= 36")
MP_MATCH_COMPRESSED("integer needed", "\377\335needed")
MP_MATCH_COMPRESSED("invalid format specifier", "\377\243\202\210")
MP_MATCH_COMPRESSED("invalid micropython decorator", "\377\243micropython decorator")
MP_MATCH_COMPRESSED("invalid syntax", "\377\243\347")
MP_MATCH_COMPRESSED("invalid syntax for number", "\377\243\347\223\246")
MP_MATCH_COMPRESSED("issubclass() arg 1 must be a class", "\377\276\2321\217\240\247\353")
MP_MATCH_COMPRESSED("issubclass() arg 2 must be a class or a tuple of classes", "\377\276\232\373\217\240\247\353\270\247\310\231classes")
MP_MATCH_COMPRESSED("join expects a list of str/bytes objects consistent with self object", "\377join expects\247\325\231str/bytes objects consistent\271\366\201")
MP_MATCH_COMPRESSED("length in header wrong", "\377\222\236header\311")
MP_MATCH_COMPRESSED("local variable referenced before assignment", "\377local variable referenced before\230")
MP_MATCH_COMPRESSED("long int not supported in this build", "\377\364\250\206\213\236this build")
MP_MATCH_COMPRESSED("math domain error", "math domain error")
MP_MATCH_COMPRESSED("memory allocation failed, allocating %u bytes", "\377\345\312\333allocating %u\352")
MP_MATCH_COMPRESSED("memory allocation failed, heap is locked", "\377\345\312\333heap\256locked")
MP_MATCH_COMPRESSED("multiple *x in assignment", "\377\216\351\236\230")
MP_MATCH_COMPRESSED("multiple bases have instance lay-out conflict", "\377\216bases\324instance lay-out conflict")
MP_MATCH_COMPRESSED("multiple inheritance not supported", "\377\216inheritance\206\213")
MP_MATCH_COMPRESSED("must use keyword argument for key function", "\377\217use\215\203\223\375\205")
MP_MATCH_COMPRESSED("name '%q' isn't defined", "\377\234\212\224defined")
MP_MATCH_COMPRESSED("name too long", "\377\234\307\364")
MP_MATCH_COMPRESSED("need more than %d values to unpack", "\377need\365than\227\274\220\350")
MP_MATCH_COMPRESSED("negative shift count", "negative shift count")
MP_MATCH_COMPRESSED("no active exception to reraise", "\377\267active exception\220reraise")
MP_MATCH_COMPRESSED("no binding for nonlocal found", "\377\267binding\223\257\302")
MP_MATCH_COMPRESSED("no module named '%q'", "\377\267module named\212")
MP_MATCH_COMPRESSED("non-default argument follows default argument", "\377non-default\203follows\332\203")
MP_MATCH_COMPRESSED("non-keyword arg after */**", "\377\304\232\277*/**")
MP_MATCH_COMPRESSED("non-keyword arg after keyword arg", "\377\304\232\277\215\232")
MP_MATCH_COMPRESSED("object '%s' isn't a tuple or list", "\377\201\207\224\247\310\270\325")
MP_MATCH_COMPRESSED("object not in sequence", "\377\201\206\236\261")
MP_MATCH_COMPRESSED("object of type '%s' has no len()", "\377\201\231\235\207\263\267len()")
MP_MATCH_COMPRESSED("object with buffer protocol required", "\377\201\271\340protocol\225")
MP_MATCH_COMPRESSED("only slices with step=1 (aka None) are supported", "\377only slices\271step=1 (aka None) are\213")
MP_MATCH_COMPRESSED("opcode", "opcode")
MP_MATCH_COMPRESSED("ord() expected a character, but string of length %d found", "\377ord()\252\247character,\301\226\231\222\227\302")
MP_MATCH_COMPRESSED("pop from empty list", "\377pop\266\251\325")
MP_MATCH_COMPRESSED("popitem(): dictionary is empty", "\377popitem(): dictionary\256\251")
MP_MATCH_COMPRESSED("requested length %d but object has length %d", "\377requested\222\227\301\201\263\222\227")
MP_MATCH_COMPRESSED("rsplit(None,n)", "rsplit(None,n)")
MP_MATCH_COMPRESSED("sign not allowed in string format specifier", "\377\367\206\214\236\226\202\210")
MP_MATCH_COMPRESSED("sign not allowed with integer format specifier 'c'", "\377\367\206\214\271\335\202\210'c'")
MP_MATCH_COMPRESSED("single '}' encountered in format string", "\377single '}' encountered\236\202\226")
MP_MATCH_COMPRESSED("slice step can't be zero", "\377slice\370\200\240\272")
MP_MATCH_COMPRESSED("small int overflow", "\377\357\250overflow")
MP_MATCH_COMPRESSED("start/end indices", "\377start/end\334")
MP_MATCH_COMPRESSED("stream operation not supported", "\377stream operation\206\213")
MP_MATCH_COMPRESSED("substring not found", "\377substring\206\302")
MP_MATCH_COMPRESSED("super() can't find self", "\377super()\200find\366")
MP_MATCH_COMPRESSED("too many values to unpack (expected %d)", "\377\307many\274\220\350(expected %d)")
MP_MATCH_COMPRESSED("tuple index out of range", "\377\310\255\305\231\260")
MP_MATCH_COMPRESSED("type '%q' isn't an acceptable base type", "\377\235\212\224\331acceptable base\235")
MP_MATCH_COMPRESSED("type object '%q' has no attribute '%q'", "\377\235\201\212\263\267\320\212")
MP_MATCH_COMPRESSED("type takes 1 or 3 arguments", "\377\235\3061\2703\204")
MP_MATCH_COMPRESSED("unexpected indent", "\377\317\343")
MP_MATCH_COMPRESSED("unexpected keyword argument '%q'", "\377\317\215\203\212")
MP_MATCH_COMPRESSED("unicode name escapes", "\377unicode\234escapes")
MP_MATCH_COMPRESSED("unindent doesn't match any outer indent level", "\377unindent\242match any\356\343level")
MP_MATCH_COMPRESSED("unknown conversion specifier %c", "\377\264\313\210\376")
MP_MATCH_COMPRESSED("unknown format code '%c' for object of type '%s'", "\377\264\202\362\360\223\201\231\235\207")
MP_MATCH_COMPRESSED("unknown status", "\377\264status")
MP_MATCH_COMPRESSED("unmatched '{' in format", "\377unmatched '{'\236\202")
MP_MATCH_COMPRESSED("unsupported format character '%c' (0x%x) at index %d", "\377\245\202character\360(0x%x) at\255\227")
MP_MATCH_COMPRESSED("unsupported type for %q: '%s'", "\377\245\235\223\372\207")
MP_MATCH_COMPRESSED("unsupported types for %q: '%s', '%s'", "\377\245types\223\372'%s',\207")
MP_MATCH_COMPRESSED("wrong number of arguments", "\377\311\246\231\204")
MP_MATCH_COMPRESSED("zero step", "\377\272\370")
// Total input length:      5043
// Total compressed length: 2212
// Total data length:       1106
// Predicted saving:        1725

// gzip length:             2777
// Percentage of gzip:      119.5%
// zlib length:             2765
// Percentage of zlib:      120.0%
